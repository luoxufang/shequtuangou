<template>
  <view class="myAddressPage myContainer">
    <form bindsubmit="formSubmit" bindreset="formReset">
      <view class="inp">
        <view class="inp_1">
          <label>收货人</label>
          <input name="name"  placeholder="请输入姓名" maxlength="100" class="name" value="{{receiver_username}}" placeholder-style="font-size:28rpx;color:#999999;"/>
        </view>
        
        <view class="inp_1">
          <label>手机号码</label>
          <input name="phone"  placeholder="请输入号码" bindinput="phoneChange" class="name" value="{{receiver_phone}}" placeholder-style="font-size:28rpx;color:#999999;"/>
        </view>

        <view class="address_input" style="display: flex;align-items: center;padding:24rpx 0;">
          <label>所在地区</label>

          <picker style="flex: 1;text-align:right;" mode="region" bindchange="bindRegionChange" value="">
            <input disabled='true' name="address" value="{{showAddress}}" maxlength="" placeholder="请选择地区" placeholder-style="{{commonStyle}}"/>
          </picker>
          <image src="../../assets/images/right.png" style="width:14rpx;height:24rpx;margin-left:28rpx;"/>
        </view>
        
        <view class="inp_1" style=" border: none">
          <label>详细地址</label>
          <input name="del_detail"  placeholder="请输入详细地址" maxlength="100" class="phone" value="{{receiver_address_detail}}" placeholder-style="font-size:28rpx;color:#999999;"/>
        </view>
      </view>
      
      <view class="inp_1" style="margin-top:20rpx;border:0;padding:0 20rpx;">
        <label>设为默认地址</label>
        <switch checked="{{checked}}" bindchange="switch1Change" color="#FEC02A"/>
      </view>

    
    <view style="width:100%;position: absolute;bottom: 120rpx;">
      <button class="btn commonBg"  formType="submit">{{text}}</button>
    </view>

    </form>
  </view>
</template>

<script>
import wepy from 'wepy';
import tip from '@/utils/tip'
import api from "@/api/api"
import {
  USER_SPECICAL_INFO
} from '@/utils/constant'
export default class AddressDetail extends wepy.page {
  config = {
    navigationBarTitleText: '新增收货地址'
  };
  data = {
    receiver_username:'',
    receiver_phone:'',
    receiver_address_detail:'',
    showInput:true,
    showAddress:'',
    phoneNumber:'',
    checked: false,
    del_province: '请选择',
    del_city:'',
    del_area:'',
    text: '保存',
    region: [],
    editInfo: { default: {},type: Object },
    id: '',
    province: '',
    city: '',
    area: '',
    provinceCode: '',
    cityCode: '',
    areaCode: '',
    address_id:''
  };
  
  onLoad(option) {
    this.address_id = option.address_id
    if(option.address_id){
      //如果type标志存在,着请求地址详情,且改变页面标题
      wx.setNavigationBarTitle({
        title: '编辑地址'
      })
      //根据地址，获取地址信息
      this.editUserAddress(option.address_id)
    }else{
      //初始化各个表单，新建地址
    }
  }
  onShow (){
    this.province = { code: '120000', name: '省' };
    this.city = { code: '120100', name: '天津市' };
    this.area = { code: '120101', name: '和平区' };
    // this.$invoke('areaPicker', 'setAddressPickerValue', this.province, this.city, this.area);
  }
  methods = {
    switch1Change(){
      this.checked = !this.checked
    },
    phoneChange(event){
      this.phoneNumber = event.detail.value
    },
    bindRegionChange (e) {
      console.log('picker发送选择改变，携带值为', e.detail.value)
      var regions = e.detail.value;
      this.regions = e.detail.value
      this.showAddress = regions.join('-')
    },
    refresh(val) {
      console.log(val);
      if (val == undefined) return;
      console.log("val.....", val);
      this.editInfo = val;
      console.log(this.editInfo);
      this.id = this.editInfo.id;
      if(this.editInfo.isDef==1){
        this.isDefult=true
      }
      console.log("==========ee=========");
      console.log(this.isDefult);
      this.province = { code: this.editInfo.provinceCode, name: this.editInfo.provinceName };
      this.city = { code: this.editInfo.areaCode, name:this.editInfo.areaName };
      this.area = { code: this.editInfo.cityCode, name: this.editInfo.cityName };

      this.$apply();
    },
    openAddressPicker() {
      this.$invoke('areaPicker', 'openAddressPicker');
    },
    areaPickerArray(province, city, area) {
      this.province = province;
      this.city = city;
      this.area = area;

      this.provinceCode = province.code;
      this.cityCode = city.code;
      this.areaCode = area.code;
      this.$apply();
    },
    async formSubmit(e){
      console.log(e)
      var RegExp = /^((0\d{2,3}-\d{7,8})|(1[3584]\d{9}))$/;
      if(!e.detail.value.name){
        tip.toast('请填写姓名')
      }else if (!this.phoneNumber || !RegExp.test(this.phoneNumber)) {
        tip.toast('请正确输入号码')
      }else if(!e.detail.value.address){
        tip.toast('请选择地址')
      }else if(!e.detail.value.del_detail){
        tip.toast('请填写详细地址')
      }else{
        if(this.address_id){
          const data = await api.updateAddress({
            query:{
              id:this.address_id,//要被编辑的地址id
              province_str:this.showAddress.split('-')[0],
              city_str:this.showAddress.split('-')[1],
              area_str:this.showAddress.split('-')[2],
              user_name:e.detail.value.name,
              tel_number:e.detail.value.phone,
              detail_info:e.detail.value.del_detail,
              is_default:this.checked ? 1:0,
              token: wx.getStorageSync('openid')
            },
            method:'post'
          });
          if(data.data.code==200){
            tip.toast('修改成功')
            setTimeout(()=>{
              wepy.navigateBack({
                delta: 1
              })
            },800)
          }else{
            tip.toast(data.msg)
          }
        }else{
          const data = await api.storeUserAddress({
            query:{
              province_str:this.showAddress.split('-')[0],
              city_str:this.showAddress.split('-')[1],
              area_str:this.showAddress.split('-')[2],
              user_name:e.detail.value.name,
              tel_number:e.detail.value.phone,
              detail_info:e.detail.value.del_detail,
              is_default:this.checked ? 1:0,
              token: wx.getStorageSync('openid')
            },
            method:'post'
          });
          if(data.data.code==200){
            tip.toast('创建成功')
            setTimeout(()=>{
              wepy.navigateBack({
                delta: 1
              })
            },800)
          }else{
            tip.toast(data.msg)
          }
        }
      }
    }
  }
  //编辑地址
  async editUserAddress(ids){
    const result = await api.editUserAddress({
      query:{ 
        token : wx.getStorageSync('openid'),
        id : ids
      },
      method:"POST"
    });
    if(result.data.code==200){
      this.phoneNumber = result.data.data.tel_number
      this.receiver_username = result.data.data.user_name
      this.receiver_phone = result.data.data.tel_number
      this.showAddress = result.data.data.province_str+'-'+result.data.data.city_str+'-'+result.data.data.area_str
      this.receiver_address_detail = result.data.data.detail_info
      if(result.data.data.is_default){
        this.checked = true
      }
    }
    this.$apply();
  }
}
</script>

<style lang="less" >
/* pages/my_address/my_address.wxss */
switch{
  zoom: .7;
}
.myAddressPage {
  width: 100%;
  height: 100%;
  position: relative;
}
.inp:after,
.inp_1:after {
  clear: both;
  content: '.';
  display: block;
  width: 0;
  height: 0;
  visibility: hidden;
}
.inp {
  padding: 0 24rpx;
  background: #fff;
  border-top: 1rpx solid #eee;
  .address_input{
    border-bottom: 1px solid rgba(153, 153, 153, 0.1);
    background: #fff;
    font-size: 28rpx;
  }
}
.inp_1 {
  border-bottom: 1px solid rgba(153, 153, 153, 0.1);
  background: #fff;
  font-size: 28rpx;
  height: 100rpx;
  line-height: 100rpx;
}
.inp_1 label {
  float: left;
  color: #333;
  font-size: 28rpx;
}
.inp_1 input {
  float: right;
  width: 520rpx;
  height: 100rpx;
  font-size: 28rpx;
  color: #333;
  padding-right: 20rpx;
  text-align: right;
}
.inp_1 switch{
  float: right;
}
.btn {
  background: #d91f54;
  color: #fff;
  margin: 126rpx 20rpx 26rpx 20rpx;
  height: 100rpx;
  line-height: 100rpx;
  font-size: 36rpx;
  text-align: center;
}
button::after {
  border: 0;
}

.mapAddress,
.brand {
  position: absolute;
  right: 24rpx;
  display: inline-block;
  width: 450rpx;
  text-align: right;
  overflow: hidden;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -webkit-text-overflow: ellipsis;
  -moz-text-overflow: ellipsis;
  white-space: nowrap;
  color: #333;
  font-size: 28rpx;
}
</style>